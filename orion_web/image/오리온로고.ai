%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 15.1.0
%%For: (user) ()
%%Title: (\677\700\670\656\677\702\667\716\660\755.ai)
%%CreationDate: 7/22/2019 8:39 AM
%%Canvassize: 16383
%%BoundingBox: 92 -694 482 -167
%%HiResBoundingBox: 92.2925 -693.7432 481.6777 -167.9775
%%DocumentProcessColors: Magenta Yellow
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([\670\702\703\747\702\757\661\742])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 298.5 -421.5 298.5 -421.5
%AI3_TileBox: 12.04 -827.6855 583.2402 -14.2051
%AI3_DocumentPreview: None
%AI5_ArtSize: 595.2803 841.8896
%AI5_RulerUnits: 4
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -408.374 189.3784 0.6667 1131 688 18 0 0 121 171 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-8 -817
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 96 128 8
%%BeginData: 10132 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0BFFC2BC8CB08CB5BBCAFD06FFCAFD4FFFC38CFC8CB08CB08CB5
%9AB5A7FD04FFC299FD09FFCFFFCFFFCAFD3FFFC28CB08CB58CB08CB09AFF
%BCC2CAFFC3C992B5C3C3CAFFFFFFCAC3BBBB8CB58CB593C2C2CFFD06FFC9
%C9C3C9C3C9C3C9C3C9CAFFFFCFA0C2CAFD06FFCAC2C299BB93BB93C2C2C9
%CAFD11FFC28CB08CB0A1BC99BBCAFFFFFFA0B0A7C28CFC8CB09AFFFFFF99
%B08CB08CB08CB08CFC8CB08CBCA8FFFFFFA7B08CFC8CB08CFC8CB08CBCFF
%FF8CFC8CB5FD04FFA0B58CB08CFC8CB08CFC8CB08CB099CFFD0EFFCF8CB0
%8CB0BBFFFFCA8CBBCAFFFFC38CC2FFC28CB0BBFFFFFFB5B08CB0B5C9CAFF
%FFFFC2B58CB08CB5CAFFFFFFC2C2BCC2BCC299B08CB099FFCAB08CB08DFF
%FFFFC2B08CB08DC3CAFFFFFFCACABBB08CB08DFD0EFF99B093B593CAFFFF
%A7B08CCA9ABCC3B58CCA93BC9AB5CAFF99B08CFC93FD07FFCAB08CB08CC2
%FD09FFC98CB08CBBFFCA8CB08CB5CFFFFFBC8CB08CB5CAFD06FFC28CB08C
%B0CAFD0DFFB58CFFFFBB8CFFBCC393B593B08CB08CB099CAFFFFC9CFFFBB
%8CB08CC2FD08FF93B08CB099FFFFFFCAFFCACFCAFFC2B08CB0BBFFC9B08C
%B08CFFFFFFCABC8CB08CB093BC99BCBBB08CB08CB5C3FD0DFFCA8CBBFFFF
%A1B592B08CB08CB08CB08CB08CBBFD06FFA0FC8CB08CC9FD06FFA0FC8CB0
%8CC3FFFFCAB58CB08CFC8CB08CFC8CBBFFCA8CB08CB5CAFD04FFCFA0BC93
%B08CFC8CB092BB9AC9FD0FFFC9B593C9C3B58CB08CB08CB08CB08CB08CB0
%93FD07FFC2B08CB08CBCC3C9C3C3B5B08CB08CC2FD04FF8CB08CB093BBB5
%BB93BBC2FFC9B08CB08CFFFFC9C2C9C3C9C2C3B5B08CB08DC2C2C9C3C3C2
%C9FD0CFFCAC3FC8CB08CB08CB08CB08CB08CB08CB08CBBFD08FFA7BC8CFC
%8CB08CFC8CB08CB099CAFD04FFCFB58CB08CFD08FFCA8CB08CB5FFFF8CFC
%8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CFD0EFFC3B58CB08CB08CB08CB0
%8CB08CB08CB0BCFD0BFFCAC28CB08CB0A0CAFD08FF8DB08CB5FD08FFC9B0
%8CB08DFFFFCAC3B58CB08CC3C3C9C9C9C3C9C9C9C3C9C3C9FD0DFFCAC28C
%FC8CB08CFC8CB08CB08CB08CB08CC9FD06FFCAFFCAFFCAFFC9FC8CB08CCF
%FFFFCAFFCAFFFFFFCAB08CFC8CFFFFFFCAFFCAFFFFCA8CB08CB5CAFFFFFF
%8CFC8CB0CAFD1AFFB5BBBCB58CB58CB08CB08CB08CB08CBBFD06FF99B08D
%B58CB58DB08CB08CB08CB58DB58CB58CC9FFFF93B08CB08DB58CB58DB58C
%BBC3B08CB08DFD04FFB58CB08CB58CB58DB58CB58DB58CB0BBFD0FFFC2C9
%FFA0B5C3CA92B08CB08CB08CFCA1FD06FFBC8CB08CB08CB08CB58CB58CB0
%8CB58CB08CB0C3FFFFCA93B08CB58CB08CB58CB092C98CB08CB5CFFFFFFF
%C3B58CB58CB08CB58CB08CB58CB08CBCFD0FFFCAC2C3C28CFFFFB58CB08C
%B08CB0C3FD09FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFD07FFCFFFFF
%FFCFFD0FFFCFFFFFFFCFFFFFFFCFFD14FFA8C28CFC8CB58CFC8CB08CB0A1
%FD55FFCA99B58CB08CB0B5C2CFFD58FFCACAC9CACAFDFCFFFDFCFFFDFCFF
%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD67FFA8C9A1
%C3A1CFFD58FFCA99B58CB08CB08CBBC3FD05FFCAC9FD4EFFC28CFC8CB08C
%B08CB09AFC99FD04FFC28CFD4DFFC28CB08CB58CB08CBB9AFFCAC299FFC2
%BB8CB0B5BCCAFFFFFFC3C293B593C2C9FD05FFC3C2BCC29AC2BCC3C9FFFF
%FFCABC93C3FD05FFCAC2BB93BBBBC9CFFD04FFCFBCBC99CAFFFFFFCABBCA
%FD0EFFC98CB08CB099C99AB099CFFFFFA0FC9AFF93FC8CB5C9FFFFCA92FC
%8CB08CFC8CB093CFFFFFC9FC8CB08CFC8CB08CFC93FFFFBB8CB08CCAFFFF
%CABB8CB08CB58CB08CB5A1FFFFFF8CB08CFC8CCAFFFF93B093FD0EFF93B0
%8CB0BBFFFFFF8CB0BCFFC9C98CB0FFC98CB093FFFFCA8CB08CBBCAFFC9B5
%8CB093FFFFC98CB08CC2CFCFBBB08CB0BBFF93B08CB0C9FFFFB58CB08CC9
%FFFFBBB08CB0C3FFCAB08CB08CB08CFFFFBC8CBCFD0DFFA0B093BC93B0C9
%CAA1B58CBB8CB093B08CC299C9CABCC9FF8CB08CB0CAFFFFFFA0B08CFC93
%FFC3FC8CB0A0FFFFFF8CB08CB5CABB8CB08CCAFFBC8CB08CC3FD04FF8CB0
%8CB0CAFF8CB08CB08CB093FF99B099FD0DFFC28CC3FFC98CBB8DB08CB08C
%B08CB08CB093FD05FFC2B08CB0BBFD05FF92B08CB0CACA8CB08CC3FFFFCA
%B08CB08CFFB5B08CB0CAFF8CB08CB5CAFD04FFC28CB08CC3CFB08CBC8CB0
%8CB0BBBC8CBCFD0DFF93FC99CF9AB58CB08CB08CB08CB08CB08CB5CAFD04
%FFBB8CB08CC3FD05FFBB8CB08CC3A1B08CFC99CAC9BB8CB08CBBFFBB8CB0
%8CCAA1FC8CB093FD05FFA0B08CFC93CF8CFCA1C38CB08CB08CFC99FD0DFF
%BC8CB0B5B08CB58CB08CB08CB08CB08CB08CFD05FFBBB08CB0C3FD05FF99
%B08CB0C3CA8CB08CBC8DB08CB58DBBCAFFB5B08CB0CACA8CB08CBCFD05FF
%C98CB08CBCCAB58CCAFFBC8CB58CB08CBCFD0DFFC9BC8CB08CB08CB08CB0
%8CB08CB08CB08CB5FD05FFC28CB08CC2FD05FFB58CB08CCAA1B08CFCA0C2
%8CB08CC3FFFFFFBB8CB08CCACAFC8CB092FD05FFA0B08CFC99FF8CFCA1FF
%CAB58CB08CFC99FD0EFFCAB58CB08CB08CB08CB08CB08CB08CB0BCFD05FF
%C9B08CB093FD04FFCA8CB08CB5FFC98CB08CC9CAB08CB092FFFFFF93B08C
%B0C9FF93B08CB0C9FD04FFBB8CB08CCACAB08CC9FFFFCAB08CB08CBCFD0E
%FFC28CFC8CB08CFC8CB08CB08CB08CB08CCAFD06FF99B08CFC99FFFFFF92
%B08CFCA1FFA1FC8CB0A0FF99B08CFC99FFFFB58CB08CCAFFCA8CFC8CB5CA
%FFFFC28CB08CBCFFCA8CB0A1FFFFFFA0FC8CB099FD0EFFC2B5C9C28CB599
%B58CB08CB08CB08CBCFD08FFC2B08CB0BBC293B08CB0C3FFFFC98CB08CC3
%FFFF8CB08CB0C3FF93B08CB0C9FFFFCA8CB08CB5BCBC8CB08CC2FFFFCAB0
%8CC9FD04FFBCB08CBCFD0FFF99C9A0B09AFF93B08CB08CB08CB5CAFD09FF
%C9BB8CB08CFC8CC2CAFFFFFFC3B593B5C3FFFFC392BB92BCCFBC92BB93CA
%FFFFFFCF9AB58CFC8CB099C9FFFFFFCF93B5C3FD05FF99B59AFD10FFBBB0
%8CB5BBB58CB08CB08CBBCAFD0DFFCACACAFD1EFFCFC9CACAFD22FFA0B58C
%B08CFC8CB08CC2CAFD57FFCAC2C2BCC3C9FDFCFFFDFCFFFDFCFFFDFCFFFD
%FCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDCCFFCACAA8FD33FFCA
%CFC9CAA1CACAFD20FFC2BCB5B58CB5B5BCC2FD09FFCAFD24FFCFBCBB8CB0
%8CB08CB599CAFD08FFCACAFD12FFC28CFC8CB08CB08CB08CB593C2FD07FF
%C299FD21FFCAC28CFC8CB08CB08CB08CBB99B5C9FD06FFC393FD10FFCABB
%8CB08CB08CB08CB08CB0C3CA8CB5CAFD05FF93B5FD20FFCAB58CB08CB08C
%B08CB08CB0C2FF8CB0C3FD05FF99B0C9FD0EFFA7B08CB08CB093FC8CB08C
%B593CAFFC3A0C2CAFF99C299B08CBB99BCA7FD1BFFA7B08CB08CB099B58C
%B08CBB99CAFFCAA7C2A0FF99B593B08CB593B5A1FD0BFFB58CB08CB08CCF
%BBBCBCBBCFFD05FF93B5FFCA8CB08CB58CB0C3FD1BFFCFB58CB08CB08CCA
%C9C2C2BBC9FD05FF93B0CAFFBBB08CB58CB5C9FD0BFFBC8CB08CB08CB5CF
%FFFFC38CB5A7FFFFFFA1B08CC2FFFF8CFC8CB0C9FD1CFFC28CB08CB08CBB
%CAFFFFC38CFC9AFFFFFFCAB08CB5FFFF93FC8CB0C3FD0BFFCF8CB08CB08C
%C2FD04FF93B08CBCFFCAC9FF99B08CFFCFB08CB58CC9FD1CFF8CB08CB08C
%C2FD04FF99B08CBBFFCAC2FFC2B08CC9FFB08CBB8CC2FD0BFF99B099BC93
%BC93C3FFFFFFC98CB09AC38CB099BC8CB0A0C28CCACABB93FD1BFF9AB099
%C399C38CBBCAFFCACA8CB099C28CB08CBC8CB099C393CFFFC992CFFD0AFF
%BB8CBCFFFFC3B093FFBBBBC2B58CB58CB08CB08CB58CBBC9FD04FFCACFFD
%1AFFBC8CB5FFFFC9B08CCFBBB099BB8CB08CB08CB08CB08CB5C9FD05FFCF
%FD09FFCF8CB0C2FFFFFF99B593B08CFC8CB08CB08CB08CB08CB08CFD21FF
%8CB0A0FFFFFFA0B592B08CFC8CB08CB08CB08CB08CB08CCAFD0FFFCAB08C
%C3CAFF9AC28CB08CB08CB08CB08CB08CB08CB08CB0CAFD1FFFCAB08CC2C9
%FF93BB8CB08CB08CB08CB08CB08CB08CB08CB0C3FD0FFFC993BC8CC299FC
%8CB08CB08CB08CB08CB08CB08CB08CFC8CCAFD1FFFCF99C28CBB99FC8CB0
%8CB08CB08CB08CB08CB08CB08CB08CC9FD0FFFCACA99B08CB08CB08CB08C
%B08CB08CB08CB08CB08CB08CB5CAFD20FFCFBCB08CB08CB08CB08CB08CB0
%8CB08CB08CB08CB08CB0C9FD11FFC999B08CB08CB08CB08CB08CB08CB08C
%B08CB08CFC8CFD23FFA0B58CB08CB08CB08CB08CB08CB08CB08CB08CB08C
%FD13FFC28CB08CB08CB08CB08CB08CB08CB08CB08CB08CBCFD22FFCFBC8C
%B08CB08CB08CB08CB08CB08CB08CB08CB08CBBFD12FFC28CFC8CB08CB08C
%B08CB08CB08CB08CB08CB08CB0A1FD22FFC38CFC8CB58CB08CB08CB08CB0
%8CB08CB08CB08CB0A1FD12FFC2BBBCC9BBB08CB5B5B08CB08CB08CB08CB0
%8CB0BBFD23FFC9BBC2CFC2B08CB5BCB08CB08CB08CB08CB08CB0B5FD13FF
%CA93FFFFCA93B5A1FF99B08CB08CB08CB08CFC8CCAFD24FF93CAFFFF99B5
%A7FFC2B08CB08CB08CB08CFC8CCAFD14FFCABBCFC9B093FFFFC38CB08CB0
%8CB08CB08CC9FD26FF93C3C9B08CFFFFC98CB08CB08CB08CB08CC9FD16FF
%C293BC8CB59ABC99B08CB08CB08CFC8CC9FD27FFCA93B58CB599B593B08C
%B08CB08CFC8CC9FD18FFCA93B08CB08CB08CB08CB08CB093CFFD2AFFC2B5
%8CB08CB08CB08CB08CB099FD1CFFA1BB8CFC8CB08CFC8CBCC3FD2DFFCAC3
%93B58CB08CB093C2CAFD20FFC9C9C3C9C9FD35FFCACFCFFD16FFCACFCACF
%CAFD17FFCAFFCAFD17FFC9C9A8FD05FFCAFFCAFD05FFC9FD05FFA8C9C9FD
%05FFA8CFFD08FFC999B08CB08CB5BBCAFFFFFFC393BCBBBC99C2CAFFBCBC
%CAFFFFFFC2BC8CB08CB093C2C9FD11FFCAC28CB08CB0BCFFFFCF93B58CB5
%8CBBC3FFBBB099FFFFCA99B08CB08CC3FFFFC2B08CBCFFFF93C2FFFFBC8C
%FC99C9C9C993B08CC2FFFFA0BB93BB93FC8CC3CAFC8CC2FFCA8CB08CC3A1
%CAC3BC8CB099FD0FFFCAB58CBBCACA92B093FFA1B08CC2CABB8CFCA7BB8C
%B0FFCA8CFC99FFC3FC8CBCFFBB8CB08CC2FFB093FFC98CB0BCFD05FF93B0
%8CCAFD05FFCA8CB0C2CF8CB09AFFCAB08CB5C3CACACABCB08CC2FD0FFFC2
%8CB0C9FFFFC98CB0C2CA8CB0CAFFC3B08CC399B093FF93B08DFFFFFFC2B0
%8CCABCB08CB08CC28CBCFFCAFC8CBBCAFFFFFFA1B08CB0CAFF99B593B58C
%B08CC3A8B08CC2FFFFCAC293B08CFC8CB599C9CAFD0FFF92B08CFFFFFFCA
%B08CBBA1FC8CC3A1BB8CB0C9BB8CB5CAB08CBBFFFFFFCA8CFC99BC8CC98C
%B08CFC99FFFFC9BB8CB099C2B5B08CBBCAFFFFBC8CB0C2C3C2C3CACF8CB0
%C2FFB5BB99BB8CB08CB08DB593B5C9FD0EFFBB8CB5FD04FF8CB0BBC98CB5
%BBB08CBBCAFF93B0B5CF8CB0BBFFFFFFC9B08CC3BCB0FFC98CB08CBCFD04
%FFCFA0FC8CB5C3CFFD04FF99B08CFD05FFA7B08CC2CAC28CFC8CC9C3C9A0
%C9C2C3A0CAFD0EFF9AB08CC9FFFFC2FC8CC9C9FC8CCA93FC92FFFFB58CB5
%FFBB8CB0CAFFFFC28CFCA7BC8CFFFFBC8CFC99FFC3C2C3C2C38CB092C9C3
%C3A0CAFFBC8CB0C2C3A0C3C2C38CB0BCFFFFBB8CB5C3C9C3C9C3C9C2CFFD
%10FF93B08DC9C3B08CBCFFC98CB0CACA8CB099FF93B08CFFCFB58CBBCAC3
%8CB0C2FF93B0FFFFFFBB8CBBFF8CB08CB08CB593B58CB08CFC99FFC9B592
%B08CB08CB099BB8CC2FFFFA0B592B08CB08CB08CB0A0FD11FFA0B58CFC8C
%C3FFFFA1BB93CAFFC293BBA7C293BBCAFFCAC28CB08CB5A1FFFFC293FFFF
%FFA8BB9AFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\303\337\300\373) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \266\363\300\314\272\352 \306\344\300\316\306\256 \307\303\267\257\261\327\300\316) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \272\355\267\273\265\345 \307\303\267\257\261\327-\300\316) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \275\311\272\274\310\255) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \306\320\305\317 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \306\320\305\317 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \276\306\306\256 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \276\306\306\256 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \272\327\261\333\276\276 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \273\352\306\367 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \273\352\306\367 \272\352\267\257\275\254 \307\303\267\257\261\327-\300\316) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\276\356\265\265\272\361 \304\304\306\304\277\356\265\345 \270\360\276\347) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (\660\713\701\644\673\766\700\670\667\716 \710\761\671\714\707\717\660\724 \707\717\661\742)
(\660\713\701\644\673\766\700\670\667\716 \710\761\671\714\707\717\660\724 \707\717\661\742) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 25 0 %_BS
%_0 0 0 1 1 25 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\664\651\670\643\675\672\670\647\707\721 \671\746\673\747\707\774)
(\664\651\670\643\675\672\670\647\707\721 \671\746\673\747\707\774) 1 2 Bd
[
<
000001010101020202030303030404040505050506060607070707080808090909090A0A0A0A0B0B
0B0B0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F1010101011111111121212121313131314141414151515
151616161616171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E
1E1E1F1F1F1F20202020202121212121222222222223232323232424242424242525252525262626
26262627272727272828282828282929292929292A2A2A2A2A2A2B2B2B2B2B2B2C2C2C2C2C2C2D2D
2D2D2D2D2E2E2E2E2E2E2E2F2F2F2F2F2F2F30303030303030313131313131313232323232323232
33333333333333333434343434343434353535353535353535363636363636363636373737373737
373737383838383838383838383839393939393939393939393A3A3A3A3A3A3A3A3A3A3A3A3B3B3B
3B3B3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F3F3F3F3F3F
3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F40404040404040404040404040404040
4040404040404040404040404040404040
>
<
000102030405060708090A0B0C0D0E0F10111213141515161718191A1B1C1D1E1F20212223232425
262728292A2B2C2C2D2E2F30313233333435363738393A3A3B3C3D3E3F3F40414243444445464748
48494A4B4C4C4D4E4F505051525354545556575758595A5A5B5C5D5D5E5F60606162636364656666
676868696A6A6B6C6D6D6E6F6F7071717273737475757677777879797A7B7B7C7D7D7E7F7F808081
828283848485858687878888898A8A8B8B8C8C8D8E8E8F8F90909192929393949495959697979898
99999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9AAAAABABAC
ACACADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B8B9B9BABABABBBBBB
BCBCBCBDBDBDBEBEBEBFBFBFC0C0C0C1C1C1C2C2C2C3C3C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C7C8
C8C8C8C9C9C9C9CACACACACBCBCBCBCCCCCCCCCCCDCDCDCDCECECECECECFCFCFCFCFD0D0D0D0D0D0
D1D1D1D1D1D2D2D2D2D2D2D2D3D3D3D3D3D3D4D4D4D4D4D4D4D4D5D5D5D5D5D5D5D5D6D6D6D6D6D6
D6D6D6D6D7D7D7D7D7D7D7D7D7D7D7D7D7D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D8D9D9
D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9
>
<
00010102030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A1A
1B1C1C1D1D1E1F1F202121222223242425262627272829292A2A2B2C2C2D2D2E2F2F303031313233
3334343535363737383839393A3A3B3C3C3D3D3E3E3F3F4040414142434344444545464647474848
49494A4A4B4B4C4C4D4D4E4E4F4F505051515152525353545455555656575758585859595A5A5B5B
5C5C5C5D5D5E5E5F5F5F606061616162626363646464656566666667676868686969696A6A6B6B6B
6C6C6C6D6D6E6E6E6F6F6F7070707171727272737373747474757575767676777777777878787979
797A7A7A7B7B7B7C7C7C7C7D7D7D7E7E7E7E7F7F7F80808080818181818282828283838383848484
848585858586868686878787878888888888898989898A8A8A8A8A8B8B8B8B8B8C8C8C8C8C8D8D8D
8D8D8D8E8E8E8E8E8F8F8F8F8F8F9090909090909091919191919192929292929292939393939393
93939494949494949494949595959595959595959696969696969696969696969797979797979797
97979797979798989898989898989898989898989898989898989999999999999999999999999999
9999999999999999999999999999999999
>
<
00000000000101010101010101020202020202020202030303030303030303040404040404040404
04050505050505050505060606060606060606060707070707070707070708080808080808080808
09090909090909090909090A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C
0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F
0F0F0F0F101010101010101010101010101011111111111111111111111111111112121212121212
12121212121212121213131313131313131313131313131313131314141414141414141414141414
14141414141415151515151515151515151515151515151515151516161616161616161616161616
16161616161616161616161717171717171717171717171717171717171717171717171717171717
18181818181818181818181818181818181818181818181818181818181818181818181818181919
19191919191919191919191919191919191919191919191919191919191919191919191919191919
19191919191919191919191919191919191919191919191919191919191919191919191919191919
191919191919191919191919191919191A
>
1 %_Br
[
0 0 0 0 1 28 48.538 %_BS
%_0 0 0 0 1 28 48.538 Bs
0.25 0.85 0.6 0.1 1 50 100 %_BS
%_0.25 0.85 0.6 0.1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\677\666\700\672 \660\713\701\644\673\766 \672\761\663\727\706\703)
(\677\666\700\672 \660\713\701\644\673\766 \672\761\663\727\706\703) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS
%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs
0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS
%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\701\726\710\662\673\766, \663\753\666\773, \700\732\701\726\673\766)
(\701\726\710\662\673\766, \663\753\666\773, \700\732\701\726\673\766) 0 7 Bd
[
0.1
<
B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B
8A89888786858483828180
>
0.8
0
1 %_Br
<
403F3E3D3D3C3B3A3A393837373635343433323130302F2E2D2D2C2B2A2A29282727262524232322
2120201F1E1D1D1C1B1A1A
>
<
D9D8D7D6D6D5D4D3D3D2D1D0D0CFCECDCDCCCBCAC9C9C8C7C6C6C5C4C3C3C2C1C0C0BFBEBDBCBCBB
BAB9B9B8B7B6B6B5B4B3B3
>
<
999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B3B4B5B6B7B8B9BABBBCBDBEBFC0C1
C2C3C4C5C6C7C8C9CACBCC
>
<
1A191818171716161515141413131212111110100F0F0E0E0D0D0C0C0B0B0A0A0909080807070606
0505040403030202010100
>
1 %_Br
<
1A1A1A1B1B1C1C1D1D1D1E1E1F1F2020202121222223232324242525262626272728282929292A2A
2B2B2C2C2C2D2D2E2E2F2F2F30303131323232333334343535353636373738383839393A3A3B3B3B
3C3C3D3D3E3E3E3F3F40
>
<
808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9
>
<
CCCBCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0BFBFBEBEBDBDBCBBBBBABAB9B9B8B7B7B6B6
B5B5B4B3B3B2B2B1B0B0AFAFAEAEADACACABABAAAAA9A8A8A7A7A6A6A5A4A4A3A3A2A2A1A0A09F9F
9E9E9D9C9C9B9B9A9A99
>
<
000001010101020202030303030404040505050506060607070707080808090909090A0A0A0B0B0B
0B0C0C0C0D0D0D0D0E0E0E0F0F0F0F10101011111111121212131313131414141515151516161617
1717171818181919191A
>
1 %_Br
<
807F7E7E7D7D7C7B7B7A7A79797877777676757574737372727171706F6F6E6E6D6D6C6B6B6A6A69
696867676666656564636362626161605F5F5E5E5D5D5C5B5B5A5A59595857575656555554535352
525151504F4F4E4E4D4D4C4B4B4A4A49484847474646454444434342424140403F3F3E3E3D3C3C3B
3B3A3A39383837373636353434333332323130302F2F2E2E2D2C2C2B2B2A2A292828272726262524
24232322222120201F1F1E1E1D1C1C1B1B1A1A
>
<
E6E5E4E4E3E3E2E1E1E0E0DFDFDEDDDDDCDCDBDBDAD9D9D8D8D7D7D6D5D5D4D4D3D3D2D1D1D0D0CF
CFCECDCDCCCCCBCBCAC9C9C8C8C7C7C6C5C5C4C4C3C3C2C1C1C0C0BFBFBEBDBDBCBCBBBBBAB9B9B8
B8B7B7B6B5B5B4B4B3B3B2B1B1B0B0AFAEAEADADACACABAAAAA9A9A8A8A7A6A6A5A5A4A4A3A2A2A1
A1A0A09F9E9E9D9D9C9C9B9A9A9999989897969695959494939292919190908F8E8E8D8D8C8C8B8A
8A898988888786868585848483828281818080
>
<
1A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041
42434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263646566676869
6A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091
92939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCC
>
0
1 %_Br
<
1A1A1B1B1C1C1D1E1E1F1F20202122222323242425262627272828292A2A2B2B2C2C2D2E2E2F2F30
303132323333343435363637373838393A3A3B3B3C3C3D3E3E3F3F40404142424343444445464647
474848494A4A4B4B4C4D4D4E4E4F4F50515152525353545555565657575859595A5A5B5B5C5D5D5E
5E5F5F60616162626363646565666667676869696A6A6B6B6C6D6D6E6E6F6F707171727273737475
75767677777879797A7A7B7B7C7D7D7E7E7F80
>
<
8080818182828384848585868687888889898A8A8B8C8C8D8D8E8E8F909091919292939494959596
9697989899999A9A9B9C9C9D9D9E9E9FA0A0A1A1A2A2A3A4A4A5A5A6A6A7A8A8A9A9AAAAABACACAD
ADAEAEAFB0B0B1B1B2B3B3B4B4B5B5B6B7B7B8B8B9B9BABBBBBCBCBDBDBEBFBFC0C0C1C1C2C3C3C4
C4C5C5C6C7C7C8C8C9C9CACBCBCCCCCDCDCECFCFD0D0D1D1D2D3D3D4D4D5D5D6D7D7D8D8D9D9DADB
DBDCDCDDDDDEDFDFE0E0E1E1E2E3E3E4E4E5E6
>
<
CCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5
A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D
7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655
54535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D
2C2B2A292827262524232221201F1E1D1C1B1A
>
0
1 %_Br
0.1
<
B3B1B1B0AFAEADACABAAA9A8A7A6A5A5A4A3A2A1A0A09F9E9D9D9C9B9A9A99989897969695949493
9292919190908F8F8E8E8D8D8C8C8B8B8A8A89898888888787878686868585858484848383838383
82828282818181818181818080808080808080808080808080808080
>
0.8
0
1 %_Br
[
0.1 0.5 0.8 0 1 50 100 %_BS
%_0.1 0.5 0.8 0 1 50 100 Bs
0.1 0.7 0.8 0 1 50 90 %_BS
%_0.1 0.7 0.8 0 1 50 90 Bs
0.25 0.85 0.6 0.1 1 50 79 %_BS
%_0.25 0.85 0.6 0.1 1 50 79 Bs
0.1 0.5 0.8 0 1 50 64 %_BS
%_0.1 0.5 0.8 0 1 50 64 Bs
0.5 0.9 0.1 0 1 50 47 %_BS
%_0.5 0.9 0.1 0 1 50 47 Bs
0.1 0.5 0.8 0 1 50 30 %_BS
%_0.1 0.5 0.8 0 1 50 30 Bs
0.1 0.7 0.8 0 1 28 0 %_BS
%_0.1 0.7 0.8 0 1 28 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (\661\644\707\720 \671\731\665\717\706\707)
(\661\644\707\720 \671\731\665\717\706\707) 0 0 54.7383 54.7393 [
%AI3_Tile
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
5.8643 0 m
5.8643 0.9766 L
2.9316 0.9766 L
2.9316 0 L
5.8643 0 L
f
0 5.8652 m
0.9766 5.8652 L
0.9766 2.9316 L
0 2.9316 L
0 5.8652 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
2.9316 0.9766 m
2.9316 2.9316 L
0.9766 2.9316 L
0.9766 0.9766 L
2.9316 0.9766 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
5.8643 2.9316 m
5.8643 5.8652 L
2.9316 5.8652 L
2.9316 2.9316 L
5.8643 2.9316 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0.9766 0 m
0.9766 0.9766 L
0 0.9766 L
0 0 L
0.9766 0 L
f
27.3682 0 m
27.3682 0.9766 L
20.5254 0.9766 L
20.5254 0 L
27.3682 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 2.9316 m
27.3682 5.8652 L
20.5254 5.8652 L
20.5254 2.9316 L
27.3682 2.9316 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.2793 0.2761 0 0.1285 k
 0.2793 0.2761 0 0.1285 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 9.7734 m
27.3682 14.6611 L
20.5254 14.6611 L
20.5254 9.7734 L
27.3682 9.7734 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
20.5254 5.8652 m
20.5254 9.7734 L
14.6602 9.7734 L
14.6602 5.8652 L
20.5254 5.8652 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
9.7734 0.9766 m
9.7734 2.9316 L
5.8643 2.9316 L
5.8643 0.9766 L
9.7734 0.9766 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
14.6602 2.9316 m
14.6602 5.8652 L
9.7734 5.8652 L
9.7734 2.9316 L
14.6602 2.9316 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
14.6602 0 m
14.6602 0.9766 L
9.7734 0.9766 L
9.7734 0 L
14.6602 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
20.5254 0.9766 m
20.5254 2.9316 L
14.6602 2.9316 L
14.6602 0.9766 L
20.5254 0.9766 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 27.3691 m
0.9766 27.3691 L
0.9766 20.5264 L
0 20.5264 L
0 27.3691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
2.9316 27.3691 m
5.8643 27.3691 L
5.8643 20.5264 L
2.9316 20.5264 L
2.9316 27.3691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.2793 0.2761 0 0.1285 k
 0.2793 0.2761 0 0.1285 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
9.7734 27.3691 m
14.6602 27.3691 L
14.6602 20.5264 L
9.7734 20.5264 L
9.7734 27.3691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
5.8643 20.5264 m
9.7734 20.5264 L
9.7734 14.6611 L
5.8643 14.6611 L
5.8643 20.5264 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0.9766 9.7734 m
2.9316 9.7734 L
2.9316 5.8652 L
0.9766 5.8652 L
0.9766 9.7734 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
2.9316 14.6611 m
5.8643 14.6611 L
5.8643 9.7734 L
2.9316 9.7734 L
2.9316 14.6611 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 14.6611 m
0.9766 14.6611 L
0.9766 9.7734 L
0 9.7734 L
0 14.6611 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0.9766 20.5264 m
2.9316 20.5264 L
2.9316 14.6611 L
0.9766 14.6611 L
0.9766 20.5264 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1926 0.1904 0 0.0886 k
 0.1926 0.1904 0 0.0886 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
20.5254 14.6611 m
20.5254 20.5264 L
14.6602 20.5264 L
14.6602 14.6611 L
20.5254 14.6611 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
9.7734 5.8652 m
9.7734 9.7734 L
5.8643 9.7734 L
5.8643 5.8652 L
9.7734 5.8652 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.2793 0.2761 0 0.1285 k
 0.2793 0.2761 0 0.1285 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
14.6602 9.7734 m
14.6602 14.6611 L
9.7734 14.6611 L
9.7734 9.7734 L
14.6602 9.7734 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1252 0.13 0 0.0576 k
 0.1252 0.13 0 0.0576 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 20.5264 m
27.3682 27.3691 L
20.5254 27.3691 L
20.5254 20.5264 L
27.3682 20.5264 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
48.873 54.7393 m
48.873 53.7627 L
51.8066 53.7627 L
51.8066 54.7393 L
48.873 54.7393 L
f
54.7383 48.874 m
53.7617 48.874 L
53.7617 51.8076 L
54.7383 51.8076 L
54.7383 48.874 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
51.8066 53.7627 m
51.8066 51.8076 L
53.7617 51.8076 L
53.7617 53.7627 L
51.8066 53.7627 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
48.873 51.8076 m
48.873 48.874 L
51.8066 48.874 L
51.8066 51.8076 L
48.873 51.8076 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
53.7617 54.7393 m
53.7617 53.7627 L
54.7383 53.7627 L
54.7383 54.7393 L
53.7617 54.7393 L
f
27.3682 54.7393 m
27.3682 53.7627 L
34.2109 53.7627 L
34.2109 54.7393 L
27.3682 54.7393 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 51.8076 m
27.3682 48.874 L
34.2109 48.874 L
34.2109 51.8076 L
27.3682 51.8076 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.2793 0.2761 0 0.1285 k
 0.2793 0.2761 0 0.1285 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 44.9639 m
27.3682 40.0762 L
34.2109 40.0762 L
34.2109 44.9639 L
27.3682 44.9639 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.2109 48.874 m
34.2109 44.9639 L
40.0752 44.9639 L
40.0752 48.874 L
34.2109 48.874 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
44.9639 53.7627 m
44.9639 51.8076 L
48.873 51.8076 L
48.873 53.7627 L
44.9639 53.7627 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
40.0752 51.8076 m
40.0752 48.874 L
44.9639 48.874 L
44.9639 51.8076 L
40.0752 51.8076 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
40.0752 54.7393 m
40.0752 53.7627 L
44.9639 53.7627 L
44.9639 54.7393 L
40.0752 54.7393 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.2109 53.7627 m
34.2109 51.8076 L
40.0752 51.8076 L
40.0752 53.7627 L
34.2109 53.7627 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
54.7383 27.3691 m
53.7617 27.3691 L
53.7617 34.2109 L
54.7383 34.2109 L
54.7383 27.3691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
51.8066 27.3691 m
48.873 27.3691 L
48.873 34.2109 L
51.8066 34.2109 L
51.8066 27.3691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.2793 0.2761 0 0.1285 k
 0.2793 0.2761 0 0.1285 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
44.9639 27.3691 m
40.0752 27.3691 L
40.0752 34.2109 L
44.9639 34.2109 L
44.9639 27.3691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
48.873 34.2109 m
44.9639 34.2109 L
44.9639 40.0762 L
48.873 40.0762 L
48.873 34.2109 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
53.7617 44.9639 m
51.8066 44.9639 L
51.8066 48.874 L
53.7617 48.874 L
53.7617 44.9639 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
51.8066 40.0762 m
48.873 40.0762 L
48.873 44.9639 L
51.8066 44.9639 L
51.8066 40.0762 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
54.7383 40.0762 m
53.7617 40.0762 L
53.7617 44.9639 L
54.7383 44.9639 L
54.7383 40.0762 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
53.7617 34.2109 m
51.8066 34.2109 L
51.8066 40.0762 L
53.7617 40.0762 L
53.7617 34.2109 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1926 0.1904 0 0.0886 k
 0.1926 0.1904 0 0.0886 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.2109 40.0762 m
34.2109 34.2109 L
40.0752 34.2109 L
40.0752 40.0762 L
34.2109 40.0762 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
44.9639 48.874 m
44.9639 44.9639 L
48.873 44.9639 L
48.873 48.874 L
44.9639 48.874 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.2793 0.2761 0 0.1285 k
 0.2793 0.2761 0 0.1285 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
40.0752 44.9639 m
40.0752 40.0762 L
44.9639 40.0762 L
44.9639 44.9639 L
40.0752 44.9639 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1252 0.13 0 0.0576 k
 0.1252 0.13 0 0.0576 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 34.2109 m
27.3682 27.3691 L
34.2109 27.3691 L
34.2109 34.2109 L
27.3682 34.2109 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
2.9316 54.7393 m
2.9316 53.7627 L
0.9766 53.7627 L
0.9766 54.7393 L
2.9316 54.7393 L
f
0 51.8076 m
0 53.7627 L
0.9766 53.7627 L
0.9766 51.8076 L
0 51.8076 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
2.9316 48.874 m
2.9316 51.8076 L
0.9766 51.8076 L
0.9766 48.874 L
2.9316 48.874 L
f
5.8643 53.7627 m
5.8643 51.8076 L
2.9316 51.8076 L
2.9316 53.7627 L
5.8643 53.7627 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
9.7734 54.7393 m
9.7734 53.7627 L
5.8643 53.7627 L
5.8643 54.7393 L
9.7734 54.7393 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
14.6602 51.8076 m
14.6602 53.7627 L
9.7734 53.7627 L
9.7734 51.8076 L
14.6602 51.8076 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
20.5254 48.874 m
20.5254 51.8076 L
14.6602 51.8076 L
14.6602 48.874 L
20.5254 48.874 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 44.9639 m
27.3682 48.874 L
20.5254 48.874 L
20.5254 44.9639 L
27.3682 44.9639 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 53.7627 m
27.3682 51.8076 L
20.5254 51.8076 L
20.5254 53.7627 L
27.3682 53.7627 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
14.6602 54.7393 m
14.6602 53.7627 L
20.5254 53.7627 L
20.5254 54.7393 L
14.6602 54.7393 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
9.7734 48.874 m
9.7734 51.8076 L
5.8643 51.8076 L
5.8643 48.874 L
9.7734 48.874 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
14.6602 44.9639 m
14.6602 48.874 L
9.7734 48.874 L
9.7734 44.9639 L
14.6602 44.9639 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.2793 0.2761 0 0.1285 k
 0.2793 0.2761 0 0.1285 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
20.5254 40.0762 m
20.5254 44.9639 L
14.6602 44.9639 L
14.6602 40.0762 L
20.5254 40.0762 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1926 0.1904 0 0.0886 k
 0.1926 0.1904 0 0.0886 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 34.2109 m
27.3682 40.0762 L
20.5254 40.0762 L
20.5254 34.2109 L
27.3682 34.2109 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 44.9639 m
0 48.874 L
0.9766 48.874 L
0.9766 44.9639 L
0 44.9639 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
5.8643 44.9639 m
5.8643 48.874 L
2.9316 48.874 L
2.9316 44.9639 L
5.8643 44.9639 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
9.7734 40.0762 m
9.7734 44.9639 L
5.8643 44.9639 L
5.8643 40.0762 L
9.7734 40.0762 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
2.9316 44.9639 m
2.9316 40.0762 L
0.9766 40.0762 L
0.9766 44.9639 L
2.9316 44.9639 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 34.2109 m
0 40.0762 L
0.9766 40.0762 L
0.9766 34.2109 L
0 34.2109 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
2.9316 27.3691 m
2.9316 34.2109 L
0.9766 34.2109 L
0.9766 27.3691 L
2.9316 27.3691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
5.8643 40.0762 m
5.8643 34.2109 L
2.9316 34.2109 L
2.9316 40.0762 L
5.8643 40.0762 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
9.7734 27.3691 m
9.7734 34.2109 L
5.8643 34.2109 L
5.8643 27.3691 L
9.7734 27.3691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.2793 0.2761 0 0.1285 k
 0.2793 0.2761 0 0.1285 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
14.6602 40.0762 m
14.6602 34.2109 L
9.7734 34.2109 L
9.7734 40.0762 L
14.6602 40.0762 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1926 0.1904 0 0.0886 k
 0.1926 0.1904 0 0.0886 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
20.5254 27.3691 m
20.5254 34.2109 L
14.6602 34.2109 L
14.6602 27.3691 L
20.5254 27.3691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
51.8066 0 m
51.8066 0.9766 L
53.7617 0.9766 L
53.7617 0 L
51.8066 0 L
f
54.7383 2.9316 m
54.7383 0.9766 L
53.7617 0.9766 L
53.7617 2.9316 L
54.7383 2.9316 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
51.8066 5.8652 m
51.8066 2.9316 L
53.7617 2.9316 L
53.7617 5.8652 L
51.8066 5.8652 L
f
48.873 0.9766 m
48.873 2.9316 L
51.8066 2.9316 L
51.8066 0.9766 L
48.873 0.9766 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
44.9639 0 m
44.9639 0.9766 L
48.873 0.9766 L
48.873 0 L
44.9639 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
40.0752 2.9316 m
40.0752 0.9766 L
44.9639 0.9766 L
44.9639 2.9316 L
40.0752 2.9316 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.2109 5.8652 m
34.2109 2.9316 L
40.0752 2.9316 L
40.0752 5.8652 L
34.2109 5.8652 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 9.7734 m
27.3682 5.8652 L
34.2109 5.8652 L
34.2109 9.7734 L
27.3682 9.7734 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 0.9766 m
27.3682 2.9316 L
34.2109 2.9316 L
34.2109 0.9766 L
27.3682 0.9766 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
40.0752 0 m
40.0752 0.9766 L
34.2109 0.9766 L
34.2109 0 L
40.0752 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
44.9639 5.8652 m
44.9639 2.9316 L
48.873 2.9316 L
48.873 5.8652 L
44.9639 5.8652 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
40.0752 9.7734 m
40.0752 5.8652 L
44.9639 5.8652 L
44.9639 9.7734 L
40.0752 9.7734 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.2793 0.2761 0 0.1285 k
 0.2793 0.2761 0 0.1285 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.2109 14.6611 m
34.2109 9.7734 L
40.0752 9.7734 L
40.0752 14.6611 L
34.2109 14.6611 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1926 0.1904 0 0.0886 k
 0.1926 0.1904 0 0.0886 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
27.3682 20.5264 m
27.3682 14.6611 L
34.2109 14.6611 L
34.2109 20.5264 L
27.3682 20.5264 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
54.7383 9.7734 m
54.7383 5.8652 L
53.7617 5.8652 L
53.7617 9.7734 L
54.7383 9.7734 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
48.873 9.7734 m
48.873 5.8652 L
51.8066 5.8652 L
51.8066 9.7734 L
48.873 9.7734 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
44.9639 14.6611 m
44.9639 9.7734 L
48.873 9.7734 L
48.873 14.6611 L
44.9639 14.6611 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
51.8066 9.7734 m
51.8066 14.6611 L
53.7617 14.6611 L
53.7617 9.7734 L
51.8066 9.7734 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 0 0.46 k
 1 1 0 0.46 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
54.7383 20.5264 m
54.7383 14.6611 L
53.7617 14.6611 L
53.7617 20.5264 L
54.7383 20.5264 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.8261 0.8261 0 0.38 k
 0.8261 0.8261 0 0.38 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
51.8066 27.3691 m
51.8066 20.5264 L
53.7617 20.5264 L
53.7617 27.3691 L
51.8066 27.3691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6791 0.6905 0 0.3124 k
 0.6791 0.6905 0 0.3124 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
48.873 14.6611 m
48.873 20.5264 L
51.8066 20.5264 L
51.8066 14.6611 L
48.873 14.6611 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.4654 0.46 0 0.214 k
 0.4654 0.46 0 0.214 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
44.9639 27.3691 m
44.9639 20.5264 L
48.873 20.5264 L
48.873 27.3691 L
44.9639 27.3691 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.2793 0.2761 0 0.1285 k
 0.2793 0.2761 0 0.1285 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
40.0752 14.6611 m
40.0752 20.5264 L
44.9639 20.5264 L
44.9639 14.6611 L
40.0752 14.6611 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.1926 0.1904 0 0.0886 k
 0.1926 0.1904 0 0.0886 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.2109 27.3691 m
34.2109 20.5264 L
40.0752 20.5264 L
40.0752 27.3691 L
34.2109 27.3691 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed Brush Pat 40)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7890.4521 7768.5967 m
-7498.6909 7768.5967 L
-7498.6909 7676.9077 L
-7890.4521 7676.9077 L
-7890.4521 7768.5967 L
n
0 O
0 0 0 1 k
1 XR
-7503.3535 7710.9199 m
-7505.1113 7710.9199 -7624.7817 7713.0918 -7700.6519 7714.4717 C
-7721.4663 7713.5352 -7742.2529 7712.2222 -7763.0547 7710.5024 C
-7765.5327 7710.1509 -7768.3472 7709.7949 -7769.8584 7709.6006 c
-7770.7114 7709.4863 -7771.5732 7709.3853 -7772.4375 7709.2935 C
-7771.9829 7709.0605 -7771.54 7708.7998 -7771.1167 7708.4941 C
-7770.25 7707.7324 -7769.3955 7706.8325 -7768.8735 7705.4541 C
-7768.8979 7705.1685 -7768.6997 7704.8188 -7768.6523 7704.5293 c
-7768.5532 7703.9116 -7768.6382 7703.1631 -7768.7319 7702.6274 c
-7768.7939 7702.2725 -7768.9551 7702.0254 -7769.0259 7701.7314 c
-7769.0488 7701.6348 -7768.9785 7701.5757 -7769.0059 7701.5024 c
-7769.1396 7701.1484 -7769.5313 7700.5518 -7769.7539 7700.2261 c
-7769.8579 7700.0757 -7769.9873 7699.9775 -7770.1035 7699.8188 c
-7770.1196 7699.7964 -7770.0669 7699.7349 -7770.0928 7699.7061 c
-7770.6484 7699.0664 -7771.4312 7698.5415 -7772.3955 7698.0757 c
-7772.4546 7698.0508 -7772.4639 7698.1445 -7772.5366 7698.0869 C
-7772.8213 7697.9653 -7773.1143 7697.8535 -7773.3945 7697.7915 c
-7774.8965 7697.4629 -7776.7163 7697.8477 -7777.8027 7698.6328 c
-7778.7998 7699.3555 -7779.5308 7700.8623 -7779.4678 7702.0742 c
-7779.4126 7703.1094 -7778.6665 7704.2573 -7777.4458 7705.0352 c
-7776.3604 7705.7295 -7775.0479 7705.9829 -7774.2373 7705.3589 C
-7774.6499 7705.2295 -7774.9688 7705.0332 -7775.0811 7704.7524 C
-7775.0908 7704.4766 -7775.0967 7704.1992 -7774.8755 7703.8589 C
-7774.4517 7703.4863 -7773.7925 7703.2485 -7773.1235 7703.7158 c
-7772.1846 7704.3701 -7772.0728 7705.7886 -7773.0342 7706.5356 C
-7773.3086 7706.6406 -7773.5586 7706.8789 -7773.75 7706.9829 c
-7774.1826 7707.2192 -7774.5586 7707.3853 -7774.9751 7707.5435 c
-7776.0938 7707.9595 -7777.4839 7708.4185 -7778.5327 7708.5967 c
-7778.7114 7708.6284 -7778.8989 7708.6475 -7779.0806 7708.6733 C
-7782.4038 7708.3789 -7785.54 7708.0693 -7788.1416 7707.5264 C
-7788.1138 7707.5229 -7788.0908 7707.5244 -7788.0586 7707.5205 c
-7787.2378 7707.4199 -7786.6309 7707.2524 -7785.9043 7707.0127 c
-7785.6328 7706.9238 -7785.3184 7706.9116 -7785.0825 7706.8149 c
-7784.9985 7706.7856 -7784.9409 7706.6597 -7784.8472 7706.6133 c
-7784.5371 7706.4604 -7784.2129 7706.3662 -7783.8999 7706.1597 c
-7782.9097 7705.5054 -7781.8774 7704.3359 -7781.7617 7702.8677 C
-7781.9463 7701.8262 -7782.3643 7700.8525 -7783.5938 7700.0781 c
-7783.7217 7699.9951 -7783.8662 7699.96 -7783.9995 7699.8828 C
-7785.8516 7699.2168 -7787.5913 7700.3135 -7787.8066 7702.2061 C
-7787.7119 7702.3755 -7787.6499 7702.5527 -7787.6616 7702.7524 C
-7787.2939 7703.4492 -7785.9033 7704.0557 -7785.3057 7703.6143 C
-7785.6133 7703.5566 -7785.7495 7703.5254 -7785.8638 7703.2637 C
-7785.8892 7702.6069 -7785.0679 7702.4336 -7784.6528 7703.0176 C
-7784.4966 7703.7021 -7784.7676 7704.2524 -7785.2939 7704.8101 c
-7785.5068 7705.0352 -7785.7837 7705.1685 -7786.0566 7705.3545 c
-7786.4199 7705.6016 -7786.7495 7705.8828 -7787.1118 7706.0332 c
-7787.4385 7706.1685 -7787.8115 7706.2012 -7788.1445 7706.2886 c
-7788.2349 7706.3101 -7788.2969 7706.3613 -7788.3706 7706.3789 c
-7788.6274 7706.4336 -7788.8359 7706.5142 -7789.0879 7706.5469 c
-7789.4209 7706.5854 -7789.7739 7706.5488 -7790.1528 7706.5854 c
-7790.3398 7706.6055 -7790.5195 7706.6943 -7790.7144 7706.7109 c
-7790.8413 7706.7207 -7790.9722 7706.7207 -7791.1025 7706.7222 C
-7793.8135 7705.8213 -7796.0957 7704.6094 -7797.9814 7702.2783 c
-7801.6704 7697.7222 -7796.0415 7693.5566 -7794.9902 7697.5967 C
-7796.9668 7699.0352 -7800.5874 7702.1196 -7792.8892 7702.2471 C
-7784.6045 7700.7549 -7791.6982 7685.4917 -7801.6509 7689.5576 c
-7810.0151 7692.9741 -7806.1328 7701.6382 -7800.4658 7705.2935 c
-7791.9902 7710.7559 -7782.5376 7711.4917 -7772.7012 7711.5845 C
-7783.3862 7716.0488 -7797.9243 7713.4028 -7805.9897 7705.3804 c
-7810.1011 7701.2935 -7814.0435 7694.9912 -7812.8193 7688.8896 c
-7811.5742 7682.6816 -7805.1616 7688.4238 -7810.0957 7688.4424 C
-7809.8896 7694.0054 -7796.6387 7687.9648 -7802.9307 7679.8271 c
-7808.6011 7672.4917 -7818.5698 7680.5225 -7820.3242 7686.9478 c
-7826.0239 7707.8359 -7796.3545 7713.7119 -7782.3813 7714.4238 C
-7794.1143 7717.7749 -7810.3892 7715.2734 -7821.5547 7710.7856 c
-7825.9663 7709.0093 -7830.9707 7705.8926 -7833.5479 7701.7773 c
-7837.4619 7695.5264 -7830.4268 7691.2837 -7829.8955 7693.4028 c
-7829.4697 7695.0957 -7835.3765 7695.6235 -7830.8267 7698.6992 c
-7826.8091 7701.4185 -7823.2759 7695.2095 -7822.4619 7692.0781 c
-7818.6782 7677.5317 -7840.0601 7679.4604 -7842.3667 7693.1982 c
-7847.5103 7723.8271 -7801.3071 7717.4575 -7785.4902 7716.5928 C
-7785.7124 7716.7612 -7785.9331 7716.9189 -7786.1543 7717.0825 C
-7791.4346 7718.585 -7796.6416 7720.7861 -7801.46 7723.5469 C
-7815.9546 7725.2813 -7828.7495 7714.8901 -7844.5913 7709.6152 c
-7853.5635 7706.6284 -7864.0933 7710.9277 -7872.2778 7706.3145 c
-7876.6235 7703.8545 -7879.6982 7701.2656 -7881.2959 7696.0518 C
-7882.9092 7687.1104 -7873.2979 7685.9717 -7875.1396 7690.6416 C
-7876.8428 7690.9688 -7876.1772 7689.8345 -7877.3354 7689.8413 C
-7881.2861 7693.5479 -7873.0244 7698.7314 -7869.1606 7695.4316 c
-7862.4497 7689.7031 -7867.2563 7681.3325 -7874.0864 7679.0557 C
-7892.5703 7679.25 -7893 7701.8613 -7887.0474 7714.3589 c
-7871.2217 7747.585 -7837.1445 7735.5825 -7809.5376 7728.5479 C
-7813.2817 7731.0732 -7815.8975 7734.6421 -7818.5747 7738.2158 c
-7823.2197 7744.4165 -7825.6694 7753.8545 -7817.0024 7757.8613 C
-7816.1616 7761.9829 -7814.6392 7765.8853 -7810.5669 7767.7695 c
-7805.7471 7770 -7800.8457 7767.5581 -7799.5508 7762.4512 C
-7799.4766 7759.6719 -7800.1968 7757.8262 -7802.5938 7756.3887 c
-7804.1733 7755.4414 -7809.5176 7755.5308 -7806.8574 7758.5342 C
-7804.9663 7757.0415 -7805.1323 7759.4863 -7806.0112 7760.6006 C
-7808.8823 7760.5693 -7809.5771 7758.4863 -7809.5156 7755.5181 c
-7809.5151 7755.4956 -7809.5142 7755.4688 -7809.5146 7755.4429 C
-7809.3574 7748.1367 -7808.1343 7742.3237 -7806.0718 7737.7285 C
-7806.0713 7737.73 -7806.0708 7737.7314 -7806.0698 7737.7324 c
-7805.8242 7738.2158 -7805.4819 7738.5 -7805.2485 7738.8945 c
-7805.1729 7739.0225 -7805.2495 7739.1382 -7805.1753 7739.2334 c
-7804.8262 7739.6855 -7803.9971 7740.3701 -7803.5313 7740.7397 c
-7803.3135 7740.9116 -7803.0835 7740.9985 -7802.8477 7741.1724 c
-7802.8125 7741.1973 -7802.8613 7741.3101 -7802.8115 7741.3413 c
-7801.7256 7742.0176 -7800.3638 7742.4277 -7798.7661 7742.6709 C
-7798.6699 7742.6816 -7798.6978 7742.5435 -7798.5669 7742.5933 C
-7798.1035 7742.6406 -7797.6309 7742.6733 -7797.1982 7742.6382 c
-7794.8862 7742.4453 -7792.4316 7741.0845 -7791.2129 7739.4668 c
-7790.0942 7737.9854 -7789.7095 7735.4854 -7790.3379 7733.7646 c
-7790.8774 7732.2949 -7792.4629 7730.9692 -7794.5684 7730.3901 c
-7796.4419 7729.8735 -7798.4492 7730.0845 -7799.3408 7731.3477 C
-7798.6875 7731.3535 -7798.1406 7731.4941 -7797.8545 7731.8477 C
-7797.7178 7732.2422 -7797.5859 7732.6382 -7797.7539 7733.2261 C
-7798.2002 7733.9541 -7799.0469 7734.5894 -7800.2178 7734.2124 c
-7801.4604 7733.8135 -7802.2119 7732.5781 -7802.0532 7731.3486 C
-7796.7505 7725.2031 -7789.0386 7722.6465 -7780.2539 7722.0527 C
-7780.2886 7722.0688 -7780.3218 7722.0796 -7780.3604 7722.0972 c
-7781.5015 7722.6064 -7782.3027 7723.1143 -7783.2437 7723.7832 c
-7783.5957 7724.0332 -7784.0439 7724.1909 -7784.3428 7724.4316 c
-7784.4492 7724.5166 -7784.4766 7724.7222 -7784.5913 7724.8301 c
-7784.9707 7725.1895 -7785.3975 7725.4688 -7785.7563 7725.9063 c
-7786.8945 7727.2886 -7787.8662 7729.4341 -7787.3809 7731.6016 C
-7786.6523 7733.0225 -7785.6162 7734.2437 -7783.4995 7734.8145 c
-7783.2788 7734.8755 -7783.0542 7734.8623 -7782.8276 7734.9185 C
-7779.8613 7735.0527 -7777.8369 7732.7021 -7778.3667 7729.8755 C
-7778.5781 7729.6733 -7778.7471 7729.4429 -7778.8184 7729.1509 C
-7779.6582 7728.3101 -7781.9336 7728.0508 -7782.5996 7728.9517 C
-7782.1309 7728.9004 -7781.9199 7728.8848 -7781.6387 7729.2109 C
-7781.3105 7730.1475 -7782.4189 7730.7612 -7783.2759 7730.1045 C
-7783.8052 7729.1865 -7783.6587 7728.2695 -7783.1479 7727.2314 c
-7782.9409 7726.8101 -7782.5991 7726.5 -7782.2881 7726.1104 c
-7781.8735 7725.5933 -7781.5239 7725.0415 -7781.0669 7724.6621 c
-7780.6563 7724.3232 -7780.1318 7724.1094 -7779.6899 7723.8364 c
-7779.5708 7723.7646 -7779.5039 7723.6636 -7779.4043 7723.6069 c
-7779.0596 7723.4111 -7778.7935 7723.2031 -7778.4438 7723.0469 c
-7777.9819 7722.8413 -7777.4561 7722.7373 -7776.9253 7722.5142 c
-7776.6636 7722.4063 -7776.4443 7722.1948 -7776.1709 7722.085 c
-7776.0063 7722.0215 -7775.8311 7721.9688 -7775.6592 7721.9141 C
-7774.2695 7721.9185 -7772.8613 7721.9575 -7771.4375 7722.0342 c
-7769.7285 7722.0796 -7767.4653 7722.0933 -7765.5728 7722.1665 C
-7733.4688 7718.6533 -7700.98 7717.73 -7668.4746 7717.2822 C
-7595.0664 7718.6152 -7504.8774 7720.2485 -7503.3535 7720.2485 c
-7500.7773 7720.2485 -7498.6909 7718.1597 -7498.6909 7715.5845 c
-7498.6909 7713.0078 -7500.7773 7710.9199 -7503.3535 7710.9199 c
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 10pt. \305\270\277\370/ Adobe ArtOnPath Br) -
(ush Tool/ \301\331\261\342/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10pt. \705\670\677\770)
(1 10 10 75 75 -20 110 1 0 1 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\701\731\661\742)
(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\670\702\703\747\702\757\661\742]) 0 Xs
([\670\702\703\747\702\757\661\742])
Pc
0 0 0 0 k
(\710\762\673\766)
Pc
0 0 0 1 k
(\660\713\701\644)
Pc
0 1 1 0 k
(CMYK \673\641\660\655)
Pc
0 0 1 0 k
(CMYK \663\753\666\773)
Pc
1 0 1 0 k
(CMYK \663\754\673\766)
Pc
1 0 0 0 k
(CMYK \673\747\700\714\676\710)
Pc
1 1 0 0 k
(CMYK \706\704\666\773)
Pc
0 1 0 0 k
(CMYK \670\666\701\650\705\670)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (\660\713\701\644\673\766\700\670\667\716 \710\761\671\714\707\717\660\724 \707\717\661\742) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\660\713\701\644\673\766\700\670\667\716 \710\761\671\714\707\717\660\724 \707\717\661\742)
Pc
Bb
0 0 0 0 Bh
2 (\677\666\700\672 \660\713\701\644\673\766 \672\761\663\727\706\703) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\677\666\700\672 \660\713\701\644\673\766 \672\761\663\727\706\703)
Pc
Bb
2 (\701\726\710\662\673\766, \663\753\666\773, \700\732\701\726\673\766) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\701\726\710\662\673\766, \663\753\666\773, \700\732\701\726\673\766)
Pc
Bb
0 0 0 0 Bh
2 (\664\651\670\643\675\672\670\647\707\721 \671\746\673\747\707\774) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\664\651\670\643\675\672\670\647\707\721 \671\746\673\747\707\774)
Pc
(\661\644\707\720 \671\731\665\717\706\707) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\661\644\707\720 \671\731\665\717\706\707)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0.1 0.7 0.8 0 k
(C=10 M=70 Y=80 K=0)
Pc
0.1 0.5 0.8 0 k
(C=10 M=50 Y=80 K=0)
Pc
0.65 0.1 1 0 k
(C=65 M=10 Y=100 K=0)
Pc
0.5 0.9 0.1 0 k
(C=50 M=90 Y=10 K=0)
Pc
0.25 0.85 0.6 0.1 k
(C=25 M=85 Y=60 K=10)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\267\271\300\314\276\356 1) Ln
0 A
u
*u
1 D
0 O
0 1 0.95 0 k
0 J 0 j 1 w 10 M []0 d0 XR
260.9463 -217.4282 m
260.9463 -210.9678 l
276.6816 -209.0786 288.416 -202.1431 288.416 -193.8306 c
288.416 -184.0303 272.3379 -176.2051 252.5571 -176.2051 c
232.8354 -176.2051 216.7695 -184.0303 216.7695 -193.8306 c
216.7695 -201.9727 228.0527 -208.8101 243.3066 -210.8213 C
243.3066 -217.4282 L
216.4517 -217.3306 l
212.4258 -217.3306 212.2993 -221.0605 v
211.9434 -225.1802 216.2617 -225.1802 V
217.8994 -225.1802 L
290.8604 -225.1802 L
290.8604 -217.4517 l
260.9463 -217.4282 L
f
0 D
233.9976 -193.8545 m
233.9976 -188.3267 242.0171 -183.939 251.8911 -183.939 c
261.7651 -183.939 269.811 -188.3267 269.811 -193.8545 c
269.811 -199.376 261.7651 -203.8135 251.8911 -203.8135 c
242.0171 -203.8135 233.9976 -199.376 233.9976 -193.8545 C
F
*U
345.8506 -204.3374 m
317.7783 -204.3374 L
317.7783 -217.3306 L
351.2295 -217.3306 L
351.2041 -225.1802 L
310.7676 -225.1802 l
301.0977 -224.8755 301.8135 -215.4048 Y
301.8135 -196.3721 L
329.4883 -196.3721 L
329.4883 -186.7852 L
304.6465 -186.7852 L
305.0156 -186.7852 l
300.6592 -186.7852 301.0205 -182.6899 y
301.1475 -178.8867 305.1797 -178.9473 Y
340.0537 -178.9473 l
345.9336 -179.1304 345.7246 -183.8843 v
345.8506 -204.3374 L
f
*u
1 D
457.7383 -210.3955 m
457.7383 -203.0205 L
428.3955 -203.0205 L
428.3955 -200.9976 l
443.3994 -199.6689 454.5625 -194.915 454.5625 -189.1982 c
454.5625 -182.4761 438.9736 -177.0156 419.7969 -177.0156 c
400.5811 -177.0156 385.0566 -182.4761 385.0566 -189.1982 c
385.0566 -194.7505 395.6924 -199.4619 410.2266 -200.8633 C
410.2266 -203.0698 L
383.8555 -203.0205 l
380.1211 -202.8501 379.6787 -206.3359 v
379.334 -210.3955 383.6592 -210.3955 V
385.3105 -210.3955 L
388.4785 -210.3955 L
388.4785 -218.4272 l
387.6211 -225.1802 398.4287 -225.1802 V
452.251 -225.1802 L
452.251 -217.7085 L
404.7852 -217.7085 L
404.7852 -210.3955 l
457.7383 -210.3955 L
f
0 D
403.0137 -189.1982 m
403.0137 -186.5659 410.5381 -184.3721 419.7969 -184.3721 c
429.0547 -184.3721 436.5674 -186.5659 436.5674 -189.1982 c
436.5674 -191.8862 429.0547 -193.9946 419.7969 -193.9946 c
410.5381 -193.9946 403.0137 -191.8862 403.0137 -189.1982 C
F
*U
362.5264 -178.2891 m
371.5117 -177.0156 371.5117 -185.8101 V
371.5117 -225.1802 L
354.5645 -225.1802 L
354.5645 -185.2734 l
354.0439 -178.7646 362.5264 -178.2891 V
F
152.9844 -238.8193 m
173.4248 -238.8193 189.9023 -222.938 189.9023 -203.4351 c
189.9023 -183.835 173.4248 -167.9775 152.9844 -167.9775 c
132.645 -167.9775 116.1162 -183.835 116.1162 -203.4351 c
116.1162 -222.938 132.645 -238.8193 152.9844 -238.8193 C
F
198.9004 -169.4585 m
195.4658 -178.9473 L
184.8291 -178.9473 L
193.4585 -185.6147 L
190.3154 -195.147 L
199.4971 -189.4116 L
208.6538 -195.147 L
205.104 -185.0786 L
213.6514 -178.9473 L
203.1611 -178.9473 l
198.9004 -169.4585 L
f
0 0 0 0 k
4 M166.7822 -172.0908 m
165.0171 -180.1421 l
158.9849 -180.8125 156.1655 -181.897 V
163.9126 -186.6875 L
162.5854 -193.7388 L
170.1855 -188.3452 L
178.7651 -192.3188 L
175.0059 -184.5181 L
178.6382 -178.9473 l
173.1895 -179.0698 171.0435 -179.417 v
166.7822 -172.0908 L
f
145.688 -220.2314 m
143.9927 -224.1201 l
141.6875 -224.1689 140.1821 -224.0718 V
142.957 -226.8018 L
141.4971 -230.5923 L
145.8149 -228.2642 L
150.1265 -230.4824 L
148.5708 -226.8018 L
151.1426 -223.644 l
148.5708 -223.9609 147.5483 -223.9609 v
145.688 -220.2314 L
f
143.0845 -179.313 m
142.2847 -186.6323 l
138.0488 -188.4731 136.0039 -190.1431 V
142.2847 -192.1177 L
141.605 -198.48 L
147.688 -192.8921 L
154.9272 -195.2261 L
151.1426 -188.7168 L
153.9365 -182.4702 l
150.6729 -183.1895 147.3896 -184.5181 v
143.0845 -179.313 L
f
124.7075 -190.9902 m
126.1938 -197.2002 l
123.8062 -199.376 122.5171 -201.2168 V
127.603 -201.3145 L
128.6572 -206.4336 L
132.0479 -200.8022 L
138.4995 -200.4609 L
133.6548 -196.707 L
134.0615 -191.1611 l
131.9214 -192.3799 129.7495 -194.147 v
124.7075 -190.9902 L
f
126.498 -211.8213 m
121.3169 -214.856 l
120.0908 -219.9023 122.6313 -223.6816 y
119.3354 -218.8789 118.5483 -216.7329 v
117.8115 -214.5767 116.3765 -210.4927 116.77 -209.5786 c
118.5483 -205.7021 121.0566 -203.0205 y
119.8882 -207.8105 120.0342 -210.6021 v
126.498 -211.8213 L
f
138.106 -224.0718 m
136.0039 -225.3516 133.6548 -225.6685 V
133.8896 -231.2754 L
129.9082 -226.0088 l
126.1938 -226.3994 125.3105 -225.9854 V
127.2603 -223.7295 l
125.4697 -221.6221 124.5044 -219.2808 v
127.5337 -221.4385 129.521 -221.877 V
132.6006 -218.4272 L
133.5596 -223.3032 l
136.0039 -223.9497 137.9473 -223.9497 V
F
U
u
u
u
u
*u
0 1 0.95 0 k
10 M241.6123 -416.3311 m
234.8267 -416.3311 229.333 -408.4297 229.333 -398.6807 c
229.333 -388.9336 234.8267 -381.0303 241.6123 -381.0303 c
248.3931 -381.0303 253.8901 -388.9336 253.8901 -398.6807 c
253.8901 -408.4297 248.3931 -416.3311 241.6123 -416.3311 C
F
1 D
241.6123 -374.0381 m
225.5825 -374.0381 212.5884 -385.0732 212.5884 -398.6807 c
212.5884 -412.291 225.5825 -423.3252 241.6123 -423.3252 c
257.6406 -423.3252 270.6348 -412.291 270.6348 -398.6807 c
270.6348 -385.0732 257.6406 -374.0381 241.6123 -374.0381 C
F
*U
*u
0 D
378.667 -416.3311 m
371.8848 -416.3311 366.3877 -408.4297 366.3877 -398.6807 c
366.3877 -388.9336 371.8848 -381.0303 378.667 -381.0303 c
385.4482 -381.0303 390.9443 -388.9336 390.9443 -398.6807 c
390.9443 -408.4297 385.4482 -416.3311 378.667 -416.3311 C
F
1 D
378.667 -374.0381 m
362.6377 -374.0381 349.6426 -385.0732 349.6426 -398.6807 c
349.6426 -412.291 362.6377 -423.3252 378.667 -423.3252 c
394.6953 -423.3252 407.6934 -412.291 407.6934 -398.6807 c
407.6934 -385.0732 394.6953 -374.0381 378.667 -374.0381 C
F
*U
0 D
275.9497 -421.8086 m
275.9497 -382.1738 l
275.2354 -375.2129 284.5352 -375.2129 V
301.999 -375.2129 l
321.832 -374.8604 322.1279 -388.8545 v
324.2734 -401.4248 310.1396 -402.5615 V
322.7178 -421.8086 L
304.5137 -421.8086 L
292.5254 -399.6484 l
291.1201 -397.5166 293.709 -397.4463 V
298.374 -397.4463 l
305.8477 -397.875 305.9219 -389.4893 v
306.4375 -380.5186 294.2295 -381.8906 v
291.2676 -382.3887 291.1934 -384.7344 V
291.1934 -421.8086 l
275.9497 -421.8086 L
f
327.1094 -421.8086 m
343.6885 -421.8086 L
343.6885 -381.8447 l
344.4268 -374.2705 335.1045 -374.2178 v
327.1094 -374.2178 327.1094 -381.749 v
327.1094 -421.8086 L
f
412.3633 -421.8086 m
422.2793 -421.8086 L
422.2793 -389.6357 L
447.4434 -421.8086 L
456.4688 -421.8086 L
456.4688 -378.9072 l
456.9121 -375.123 451.2656 -375.2129 v
446.7529 -375.123 446.7529 -379.1914 V
446.7529 -395.3135 L
432.1211 -377.2764 l
429.4844 -374.5527 422.4795 -374.5527 v
412.8809 -374.5039 412.3633 -382.6016 v
412.3633 -421.8086 L
f
*u
122.4277 -415.1279 m
122.3579 -415.0029 L
122.4277 -415.1279 L
F
175.9463 -379.8652 m
179.6533 -387.5791 L
171.1787 -383.6904 L
163.7153 -388.9063 L
165.0278 -381.9873 L
157.374 -377.2656 l
160.208 -376.208 166.1353 -375.5439 Y
167.8604 -367.6621 L
172.0156 -374.833 l
174.1582 -374.4971 179.5166 -374.4072 y
175.9463 -379.8652 L
f
152.4458 -383.9229 m
156.186 -390.4092 L
149.0679 -388.0869 L
143.103 -393.583 L
143.7476 -387.3564 L
137.5308 -385.4326 l
139.6025 -383.7773 143.7476 -381.9209 Y
144.5073 -374.7568 L
148.7891 -379.8623 l
152.019 -378.5752 155.2241 -377.8232 y
152.4458 -383.9229 L
f
135.6475 -386.3691 m
135.249 -391.8682 L
140.0166 -395.5146 L
133.6597 -395.915 L
130.3447 -401.417 L
129.3076 -396.4434 L
124.2896 -396.2646 l
125.5693 -394.5049 127.9316 -392.3389 Y
126.4717 -386.2314 L
131.4053 -389.3115 l
133.5605 -387.6006 135.6475 -386.3691 Y
F
131.1782 -416.6563 m
134.2124 -413.2246 L
135.1719 -418.0449 l
137.5308 -418.6563 139.4551 -418.667 V
139.6694 -418.791 l
137.5308 -420.0498 135.249 -420.3818 V
135.458 -425.8877 L
131.5869 -420.7168 l
127.9243 -421.0449 127.0298 -420.6484 V
128.9619 -418.457 l
127.21 -416.3418 126.2666 -414.084 v
129.2373 -416.2031 131.1782 -416.6563 V
F
144.4014 -421.4424 m
141.6719 -418.7881 l
143.1426 -418.8857 145.4399 -418.8369 Y
147.1328 -415.0146 L
148.8877 -418.6953 l
149.9053 -418.6982 152.4624 -418.3838 Y
149.9253 -421.4424 L
151.4883 -425.1582 L
147.2026 -422.9014 L
142.9878 -425.2197 l
144.4014 -421.4424 L
f
1 D
190.6079 -398.4561 m
190.6079 -379.2119 174.3545 -363.6104 154.3057 -363.6104 c
134.2568 -363.6104 118.002 -379.2119 118.002 -398.4561 c
118.002 -400.668 118.2412 -402.8174 118.6499 -404.9189 C
118.647 -404.5176 l
120.4219 -400.6953 122.8687 -398.0713 y
121.7075 -402.8105 121.8442 -405.5303 V
128.2021 -406.7227 L
123.0869 -409.7061 l
122.2529 -413.2383 123.2485 -416.0684 123.9023 -417.4609 c
130.3804 -426.9863 141.5688 -433.2969 154.3057 -433.2969 c
174.3545 -433.2969 190.6079 -417.6963 190.6079 -398.4561 C
F
*U
U
0 D
199.4604 -365.0342 m
196.0977 -374.4043 L
185.5972 -374.4043 L
194.1172 -380.9502 L
190.9839 -390.3193 L
200.0137 -384.6631 L
209.0449 -390.3193 L
205.541 -380.417 L
213.9712 -374.4043 L
203.6543 -374.4043 l
199.4604 -365.0342 L
f
U
U
U
u
u
*u
1 D
124.3291 -687.7451 m
124.3291 -683.4902 l
134.6904 -682.2471 142.4175 -677.6807 142.4175 -672.2061 c
142.4175 -665.7539 131.8301 -660.6016 118.8052 -660.6016 c
105.8193 -660.6016 95.2402 -665.7539 95.2402 -672.2061 c
95.2402 -677.5674 102.6704 -682.0693 112.7139 -683.3945 C
112.7139 -687.7451 L
95.0308 -687.6807 l
92.3799 -687.6807 92.2974 -690.1367 v
92.0625 -692.8496 94.9063 -692.8496 V
95.9844 -692.8496 L
144.0269 -692.8496 L
144.0269 -687.7607 l
124.3291 -687.7451 L
f
0 D
106.5845 -672.2227 m
106.5845 -668.582 111.8652 -665.6934 118.3672 -665.6934 c
124.8682 -665.6934 130.1665 -668.582 130.1665 -672.2227 c
130.1665 -675.8574 124.8682 -678.7793 118.3672 -678.7793 c
111.8652 -678.7793 106.5845 -675.8574 106.5845 -672.2227 C
F
*U
180.2354 -679.124 m
161.751 -679.124 L
161.751 -687.6807 L
183.7773 -687.6807 L
183.7612 -692.8496 L
157.1348 -692.8496 l
150.7671 -692.6494 151.2388 -686.4131 Y
151.2388 -673.8799 L
169.4619 -673.8799 L
169.4619 -667.5664 L
153.1045 -667.5664 L
153.3477 -667.5664 l
150.479 -667.5664 150.7163 -664.8711 y
150.8003 -662.3662 153.4556 -662.4063 Y
176.4189 -662.4063 l
180.2905 -662.5273 180.1528 -665.6563 v
180.2354 -679.124 L
f
*u
1 D
253.9102 -683.1143 m
253.9102 -678.2568 L
234.5894 -678.2568 L
234.5894 -676.9258 l
244.4688 -676.0508 251.8193 -672.9199 251.8193 -669.1563 c
251.8193 -664.7295 241.5537 -661.1338 228.9272 -661.1338 c
216.2739 -661.1338 206.0513 -664.7295 206.0513 -669.1563 c
206.0513 -672.8135 213.0552 -675.915 222.625 -676.8369 C
222.625 -678.29 L
205.2603 -678.2568 l
202.8018 -678.1465 202.5107 -680.4404 v
202.2837 -683.1143 205.1313 -683.1143 V
206.2192 -683.1143 L
208.3047 -683.1143 L
208.3047 -688.4023 l
207.7402 -692.8496 214.8569 -692.8496 V
250.2964 -692.8496 L
250.2964 -687.9287 L
219.0425 -687.9287 L
219.0425 -683.1143 l
253.9102 -683.1143 L
f
0 D
217.8755 -669.1563 m
217.8755 -667.4219 222.8306 -665.9795 228.9272 -665.9795 c
235.0234 -665.9795 239.9697 -667.4219 239.9697 -669.1563 c
239.9697 -670.9268 235.0234 -672.3145 228.9272 -672.3145 c
222.8306 -672.3145 217.8755 -670.9268 217.8755 -669.1563 C
F
*U
191.2158 -661.9727 m
197.1333 -661.1338 197.1333 -666.9248 V
197.1333 -692.8496 L
185.9736 -692.8496 L
185.9736 -666.5713 l
185.6309 -662.2871 191.2158 -661.9727 V
F
U
u
172.2773 -654.0908 m
198.7983 -654.0908 220.1772 -633.4854 220.1772 -608.1807 c
220.1772 -582.749 198.7983 -562.1748 172.2773 -562.1748 c
145.8872 -562.1748 124.4414 -582.749 124.4414 -608.1807 c
124.4414 -633.4854 145.8872 -654.0908 172.2773 -654.0908 C
F
231.8525 -564.0957 m
227.3965 -576.4072 L
213.5952 -576.4072 L
224.792 -585.0586 L
220.7139 -597.4277 L
232.627 -589.9844 L
244.5078 -597.4277 L
239.9023 -584.3633 L
250.9922 -576.4072 L
237.3809 -576.4072 l
231.8525 -564.0957 L
f
0 0 0 0 k
4 M190.1797 -567.5117 m
187.8896 -577.958 l
180.0625 -578.8291 176.4043 -580.2344 V
186.4565 -586.4512 L
184.7349 -595.6006 L
194.5952 -588.6006 L
205.7275 -593.7588 L
200.8491 -583.6367 L
205.563 -576.4072 l
198.4937 -576.5674 195.7085 -577.0176 v
190.1797 -567.5117 L
f
162.8105 -629.9736 m
160.6108 -635.0186 l
157.6201 -635.082 155.6665 -634.9551 V
159.2666 -638.499 L
157.3726 -643.417 L
162.9751 -640.3975 L
168.5693 -643.2744 L
166.5503 -638.499 L
169.8877 -634.4014 l
166.5503 -634.8125 165.2241 -634.8125 v
162.8105 -629.9736 L
f
159.4326 -576.8828 m
158.3945 -586.3789 l
152.8984 -588.7676 150.2451 -590.9355 V
158.3945 -593.4971 L
157.5127 -601.751 L
165.4053 -594.5 L
174.7983 -597.5293 L
169.8877 -589.084 L
173.5127 -580.9785 l
169.2783 -581.9121 165.0181 -583.6367 v
159.4326 -576.8828 L
f
135.5879 -592.0342 m
137.5171 -600.0908 l
134.4189 -602.9131 132.7466 -605.3018 V
139.3452 -605.4287 L
140.7129 -612.0713 L
145.1123 -604.7646 L
153.4834 -604.3223 L
147.1968 -599.4512 L
147.7246 -592.2559 l
144.9482 -593.8369 142.1304 -596.1299 v
135.5879 -592.0342 L
f
137.9111 -619.0615 m
131.189 -623 l
129.5981 -629.5459 132.8945 -634.4502 y
128.6182 -628.2188 127.5967 -625.4355 v
126.6406 -622.6377 124.7783 -617.3389 125.2891 -616.1523 c
127.5967 -611.1221 130.8511 -607.6426 y
129.3354 -613.8584 129.5244 -617.4805 v
137.9111 -619.0615 L
f
152.9727 -634.9551 m
150.2451 -636.6162 147.1968 -637.0293 V
147.502 -644.3027 L
142.3364 -637.4697 l
137.5171 -637.9766 136.3706 -637.4395 V
138.9004 -634.5127 l
136.5771 -631.7783 135.3247 -628.7402 v
139.2559 -631.541 141.8335 -632.1084 V
145.8291 -627.6328 L
147.0742 -633.959 l
150.2451 -634.7988 152.7666 -634.7988 V
F
U
U
u
u
0 1 0.95 0 k
10 M402.9629 -653.1963 m
429.4844 -653.1963 450.8633 -632.5908 450.8633 -607.2861 c
450.8633 -581.8545 429.4844 -561.2803 402.9629 -561.2803 c
376.5732 -561.2803 355.127 -581.8545 355.127 -607.2861 c
355.127 -632.5908 376.5732 -653.1963 402.9629 -653.1963 C
F
462.5391 -563.2012 m
458.082 -575.5127 L
444.2813 -575.5127 L
455.4785 -584.1641 L
451.4004 -596.5332 L
463.3135 -589.0898 L
475.1943 -596.5332 L
470.5889 -583.4688 L
481.6777 -575.5127 L
468.0664 -575.5127 l
462.5391 -563.2012 L
f
0 0 0 0 k
4 M420.8652 -566.6172 m
418.5752 -577.0635 l
410.748 -577.9346 407.0908 -579.3398 V
417.1426 -585.5566 L
415.4209 -594.7061 L
425.2813 -587.7061 L
436.4141 -592.8643 L
431.5352 -582.7422 L
436.249 -575.5127 l
429.1797 -575.6729 426.3945 -576.123 v
420.8652 -566.6172 L
f
393.4961 -629.0791 m
391.2969 -634.124 l
388.3066 -634.1875 386.3516 -634.0605 V
389.9531 -637.6045 L
388.0586 -642.5225 L
393.6611 -639.5029 L
399.2549 -642.3799 L
397.2363 -637.6045 L
400.5742 -633.5068 l
397.2363 -633.918 395.9102 -633.918 v
393.4961 -629.0791 L
f
390.1182 -575.9883 m
389.0811 -585.4844 l
383.585 -587.873 380.9316 -590.041 V
389.0811 -592.6025 L
388.1973 -600.8564 L
396.0918 -593.6055 L
405.4834 -596.6348 L
400.5742 -588.1895 L
404.1973 -580.084 l
399.9639 -581.0176 395.7041 -582.7422 v
390.1182 -575.9883 L
f
366.2734 -591.1396 m
368.2031 -599.1963 l
365.1045 -602.0186 363.4326 -604.4072 V
370.0313 -604.5342 L
371.3994 -611.1768 L
375.7988 -603.8701 L
384.1689 -603.4277 L
377.8828 -598.5566 L
378.4111 -591.3613 l
375.6348 -592.9424 372.8174 -595.2354 v
366.2734 -591.1396 L
f
368.5977 -618.167 m
361.874 -622.1055 l
360.2852 -628.6514 363.5811 -633.5557 y
359.3037 -627.3242 358.2822 -624.541 v
357.3271 -621.7432 355.4639 -616.4443 355.9746 -615.2578 c
358.2822 -610.2275 361.5371 -606.748 y
360.0225 -612.9639 360.21 -616.5859 v
368.5977 -618.167 L
f
383.6582 -634.0605 m
380.9316 -635.7217 377.8828 -636.1348 V
378.1885 -643.4082 L
373.0225 -636.5752 l
368.2031 -637.082 367.0576 -636.5449 V
369.5869 -633.6182 l
367.2637 -630.8838 366.0107 -627.8457 v
369.9414 -630.6465 372.5186 -631.2139 V
376.5156 -626.7383 L
377.7598 -633.0645 l
380.9316 -633.9043 383.4531 -633.9043 V
F
U
u
*u
0 1 0.95 0 k
10 M334.5176 -688.9707 m
329.8887 -688.9707 326.1396 -683.5801 326.1396 -676.9277 c
326.1396 -670.2764 329.8887 -664.8838 334.5176 -664.8838 c
339.1455 -664.8838 342.8965 -670.2764 342.8965 -676.9277 c
342.8965 -683.5801 339.1455 -688.9707 334.5176 -688.9707 C
F
1 D
334.5176 -660.1133 m
323.5811 -660.1133 314.7148 -667.6416 314.7148 -676.9277 c
314.7148 -686.2148 323.5811 -693.7432 334.5176 -693.7432 c
345.4551 -693.7432 354.3223 -686.2148 354.3223 -676.9277 c
354.3223 -667.6416 345.4551 -660.1133 334.5176 -660.1133 C
F
*U
*u
0 D
428.0342 -688.9707 m
423.4063 -688.9707 419.6553 -683.5801 419.6553 -676.9277 c
419.6553 -670.2764 423.4063 -664.8838 428.0342 -664.8838 c
432.6611 -664.8838 436.4111 -670.2764 436.4111 -676.9277 c
436.4111 -683.5801 432.6611 -688.9707 428.0342 -688.9707 C
F
1 D
428.0342 -660.1133 m
417.0957 -660.1133 408.2314 -667.6416 408.2314 -676.9277 c
408.2314 -686.2148 417.0957 -693.7432 428.0342 -693.7432 c
438.9707 -693.7432 447.8398 -686.2148 447.8398 -676.9277 c
447.8398 -667.6416 438.9707 -660.1133 428.0342 -660.1133 C
F
*U
0 D
357.9473 -692.708 m
357.9473 -665.6641 l
357.46 -660.9141 363.8057 -660.9141 V
375.7217 -660.9141 l
389.2539 -660.6738 389.4561 -670.2217 v
390.9199 -678.7998 381.2773 -679.5752 V
389.8584 -692.708 L
377.4385 -692.708 L
369.2578 -677.5879 l
368.2998 -676.1328 370.0645 -676.085 V
373.248 -676.085 l
378.3477 -676.3779 378.3984 -670.6553 v
378.751 -664.5352 370.4199 -665.4717 v
368.4004 -665.8105 368.3496 -667.4111 V
368.3496 -692.708 l
357.9473 -692.708 L
f
392.8555 -692.708 m
404.167 -692.708 L
404.167 -665.4395 l
404.6709 -660.2715 398.3105 -660.2354 v
392.8555 -660.2354 392.8555 -665.374 v
392.8555 -692.708 L
f
451.0264 -692.708 m
457.792 -692.708 L
457.792 -670.7559 L
474.9619 -692.708 L
481.1201 -692.708 L
481.1201 -663.4355 l
481.4238 -660.8535 477.5703 -660.9141 v
474.4902 -660.8535 474.4902 -663.6289 V
474.4902 -674.6299 L
464.5078 -662.3232 l
462.708 -660.4639 457.9277 -660.4639 v
451.3779 -660.4316 451.0264 -665.957 v
451.0264 -692.708 L
f
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
